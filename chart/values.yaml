customizations:
  default:
    groupSelector: ".*"
    action: default
    navigation: default
    list: default
    edit: default
    link: default

actions:
  default:
    get:
      include:
        - "*"
      exclude: []
    update:
      include:
        - "*"
      exclude: []
    delete:
      include:
        - "*"
      exclude: []
    create:
      include:
        - "*"
      exclude: []
    cordon:
      include:
        - "nodes"
      exclude:
        - "*"
    drain:
      include:
        - "nodes"
      exclude:
        - "*"
    exec:
      include:
        - "pods"
      exclude:
        - "*"
    logs:
      include:
        - "pods"
      exclude:
        - "*"
    # disabled for now
    portForward:
      include: []
      exclude:
        - "*"
    sync:
      include:
        - "helm.toolkit.fluxcd.io/helmreleases"
        - "kustomize.toolkit.fluxcd.io/kustomizations"
        - "source.toolkit.fluxcd.io/gitrepositories"
        - "external-secrets.io/externalsecrets"
        - "external-secrets.io/pushsecrets"
      exclude:
        - "*"
    pause:
      include:
        - "helm.toolkit.fluxcd.io/helmreleases"
        - "kustomize.toolkit.fluxcd.io/kustomizations"
        - "source.toolkit.fluxcd.io/gitrepositories"
      exclude:
        - "*"
    resume:
      include:
        - "helm.toolkit.fluxcd.io/helmreleases"
        - "kustomize.toolkit.fluxcd.io/kustomizations"
        - "source.toolkit.fluxcd.io/gitrepositories"
      exclude:
        - "*"

navigations:
  default:
    other:
      enabled: true
      label: "Other"
      icon: "62020"
    items:
      - label: "Nodes"
        icon: "https://raw.githubusercontent.com/kubernetes/community/refs/heads/master/icons/svg/infrastructure_components/unlabeled/node.svg"
        items:
          - label: "NodeClaims"
            route: "karpenter.sh/nodeclaims"
          - label: "Nodes"
            route: "nodes"
          - label: "NodePools"
            route: "karpenter.sh/nodepools"
          - label: "EC2NodeClass"
            route: "karpenter.k8s.aws/ec2nodeclasses"
      - label: "Workload"
        icon: "https://raw.githubusercontent.com/kubernetes/community/refs/heads/master/icons/svg/resources/unlabeled/pod.svg"
        items:
          - label: "Pods"
            route: "pods"
          - label: "Deployments"
            route: "apps/deployments"
          - label: "StatefulSets"
            route: "apps/statefulsets"
          - label: "DaemonSets"
            route: "apps/daemonsets"
          - label: "ReplicaSets"
            route: "apps/replicasets"
          - label: "ReplicationController"
            route: "replicationcontrollers"
          - label: "Jobs"
            route: "batch/jobs"
          - label: "CronJobs"
            route: "batch/cronjobs"
      - label: "Config"
        icon: "https://raw.githubusercontent.com/kubernetes/community/refs/heads/master/icons/svg/resources/unlabeled/cm.svg"
        items:
          - label: "ConfigMaps"
            route: "configmaps"
          - label: "Secrets"
            route: "secrets"
          - label: "ResourceQuotas"
            route: "resourcequotas"
          - label: "LimitRanges"
            route: "limitranges"
          - label: "HorizontalPodAutoscalers"
            route: "autoscaling/horizontalpodautoscalers"
          - label: "PodDisruptionBudgets"
            route: "policy/poddisruptionbudgets"
          - label: "PriorityClasses"
            route: "scheduling.k8s.io/priorityclasses"
          - label: "RuntimeClasses"
            route: "node.k8s.io/runtimeclasses"
          - label: "Lease"
            route: "coordination.k8s.io/leases"
          - label: "MutatingWebhookConfigurations"
            route: "admissionregistration.k8s.io/mutatingwebhookconfigurations"
          - label: "ValidatingWebhookConfigurations"
            route: "admissionregistration.k8s.io/validatingwebhookconfigurations"
          - label: "CustomResourceDefinitions"
            route: "apiextensions.k8s.io/customresourcedefinitions"
          - label: "PodSecurityPolicies"
            route: "policy/podsecuritypolicies"
      - label: "Network"
        icon: "https://raw.githubusercontent.com/kubernetes/community/refs/heads/master/icons/svg/resources/unlabeled/svc.svg"
        items:
          - label: "Services"
            route: "services"
          - label: "Endpoints"
            route: "endpoints"
          - label: "Ingresses"
            route: "networking.k8s.io/ingresses"
          - label: "IngresClasses"
            route: "networking.k8s.io/ingressclasses"
      - label: "Storage"
        icon: "https://raw.githubusercontent.com/kubernetes/community/refs/heads/master/icons/svg/resources/unlabeled/pvc.svg"
        items:
          - label: "PersistentVolumeClaims"
            route: "persistentvolumeclaims"
          - label: "PersistentVolumes"
            route: "persistentvolumes"
          - label: "StorageClasses"
            route: "storage.k8s.io/storageclasses"
      - label: "Access Control"
        icon: "https://raw.githubusercontent.com/kubernetes/community/refs/heads/master/icons/svg/resources/unlabeled/sa.svg"
        items:
          - label: "ServiceAccounts"
            route: "serviceaccounts"
          - label: "Roles"
            route: "rbac.authorization.k8s.io/roles"
          - label: "RoleBindings"
            route: "rbac.authorization.k8s.io/rolebindings"
          - label: "ClusterRoles"
            route: "rbac.authorization.k8s.io/clusterroles"
      - label: "FluxCD"
        icon: "https://raw.githubusercontent.com/fluxcd/website/refs/heads/main/assets/icons/logo.svg"
        items:
          - label: "HelmReleases"
            route: "helm.toolkit.fluxcd.io/helmreleases"
          - label: "HelmCharts"
            route: "source.toolkit.fluxcd.io/helmcharts"
          - label: "HelmRepositories"
            route: "source.toolkit.fluxcd.io/helmrepositories"
          - label: "Kustomizations"
            route: "kustomize.toolkit.fluxcd.io/kustomizations"
          - label: "GitRepositories"
            route: "source.toolkit.fluxcd.io/gitrepositories"
      - label: "External Secrets"
        icon: "https://raw.githubusercontent.com/external-secrets/external-secrets/refs/heads/main/docs/pictures/eso-round-logo.svg"
        items:
          - label: "External Secrets"
            route: "external-secrets.io/externalsecrets"
          - label: "Cluster External Secrets"
            route: "external-secrets.io/clusterexternalsecrets"
          - label: "Push Secrets"
            route: "external-secrets.io/pushsecrets"
          - label: "Secret Stores"
            route: "external-secrets.io/secretstores"
          - label: "Cluster Secret Stores"
            route: "external-secrets.io/clustersecretstores"
      - label: "Homer"
        icon: "https://raw.githubusercontent.com/bastienwirtz/homer/refs/heads/main/public/assets/icons/logo.svg"
        items:
          - label: "Homer Services"
            route: "homer.bananaops.io/homerservices"
      - label: "Velero"
        icon: ""
        items:
          - label: "Schedules"
            route: "velero.io/schedules"
          - label: "Backups"
            route: "velero.io/backups"
      - label: "Chaos Mesh"
        icon: "https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/refs/heads/master/ui/app/src/images/logo-mini.svg"
        items:
          - label: "Physical Machines"
            route: "chaos-mesh.org/physicalmachines"
          - label: "AWS Chaos"
            route: "chaos-mesh.org/awschaos"
          - label: "Network Chaos"
            route: "chaos-mesh.org/networkchaos"
          - label: "Status Checks"
            route: "chaos-mesh.org/statuschecks"
          - label: "Kernel Chaos"
            route: "chaos-mesh.org/kernelchaos"
          - label: "JVM Chaos"
            route: "chaos-mesh.org/jvmchaos"
          - label: "Workflow Nodes"
            route: "chaos-mesh.org/workflownodes"
          - label: "I/O Chaos"
            route: "chaos-mesh.org/iochaos"
          - label: "Pod I/O Chaos"
            route: "chaos-mesh.org/podiochaos"
          - label: "Pod Network Chaos"
            route: "chaos-mesh.org/podnetworkchaos"
          - label: "Physical Machine Chaos"
            route: "chaos-mesh.org/physicalmachinechaos"
          - label: "HTTP Chaos"
            route: "chaos-mesh.org/httpchaos"
          - label: "Time Chaos"
            route: "chaos-mesh.org/timechaos"
          - label: "Stress Chaos"
            route: "chaos-mesh.org/stresschaos"
          - label: "DNS Chaos"
            route: "chaos-mesh.org/dnschaos"
          - label: "Pod HTTP Chaos"
            route: "chaos-mesh.org/podhttpchaos"
          - label: "Workflows"
            route: "chaos-mesh.org/workflows"
          - label: "Block Chaos"
            route: "chaos-mesh.org/blockchaos"
          - label: "Schedules"
            route: "chaos-mesh.org/schedules"
      - label: "Namespace"
        icon: "https://raw.githubusercontent.com/kubernetes/community/refs/heads/master/icons/svg/resources/unlabeled/ns.svg"
        route: "namespaces"
      - label: "Event"
        icon: "57918"
        route: "events"

lists:
  default:
    - resourceSelector: nodes
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 3
        - label: "Ready"
          key: '$.status.conditions[?(@.type=="Ready")].status'
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
        - label: Version
          key: "$.status.nodeInfo.kubeletVersion"
          width: 2
          selectable: true
    - resourceSelector: pods
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 4
        - label: "Status"
          key: "$.status.phase"
          type: "badge"
          width: 1
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
        - label: "Node"
          key: "$.spec.nodeName"
          width: 5
          selectable: true
        - label: "Namespace"
          key: "$.metadata.namespace"
          width: 3
          selectable: true
    - resourceSelector: apps/deployments
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 4
        - label: "Current"
          key: "$.status.replicas"
        - label: "Desired"
          key: "$.spec.replicas"
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
    - resourceSelector: helm.toolkit.fluxcd.io/helmreleases
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 4
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
        - label: "Ready"
          key: '$.status.conditions[?(@.type=="Ready")].status'
    - resourceSelector: source.toolkit.fluxcd.io/helmcharts
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 4
        - label: "Chart"
          key: "$.spec.chart"
          selectable: true
          width: 3
        - label: "Version"
          key: "$.spec.version"
          selectable: true
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
        - label: "Ready"
          key: '$.status.conditions[?(@.type=="Ready")].status'
    - resourceSelector: source.toolkit.fluxcd.io/helmrepositories
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 2
        - label: "URL"
          key: "$.spec.url"
          width: 4
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
        - label: "Ready"
          key: '$.status.conditions[?(@.type=="Ready")].status'
    - resourceSelector: kustomize.toolkit.fluxcd.io/kustomizations
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 4
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
        - label: "Ready"
          key: '$.status.conditions[?(@.type=="Ready")].status'
    - resourceSelector: source.toolkit.fluxcd.io/gitrepositories
      items:
        - label: "Name"
          key: "$.metadata.name"
          width: 2
        - label: "URL"
          key: "$.spec.url"
          width: 4
        - label: "Age"
          key: "$.metadata.creationTimestamp"
          type: duration
        - label: "Ready"
          key: '$.status.conditions[?(@.type=="Ready")].status'

edits:
  default:
    - resourceSelector: "*"
      items:
        # - label: 'Name'
        #   key: '$.metadata.name'
        #   type: fields
        # - label: 'Name'
        #   key: '$.metadata.namespace'
        #   type: fields
        - label: "Annotations"
          key: "$.metadata.annotations"
          type: fields
        - label: "Labels"
          key: "$.metadata.labels"
          type: fields
        - label: "Status"
          key: "$.status"
          subresource: status
    - resourceSelector: configmaps
      items:
        - label: "Metadata"
          key: "$.metadata"
        - label: "Data"
          key: "$.data"
          type: fields
    - resourceSelector: secrets
      items:
        - label: "Metadata"
          key: "$.metadata"
        - label: "Data"
          key: "$.data"
          type: base64fields

links:
  default:
    - resourceSelector: pods
      items:
        - key: "$.spec.nodeName"
          target: "nodes/name"

haproxy:
  enabled: true
  ingress:
    enabled: false
  config: |
    global
      log stdout format raw local0
      maxconn 4096
      tune.ssl.default-dh-param 2048
    defaults
      log global
      mode http
      timeout connect 5000ms
      timeout client 50000ms
      timeout server 50000ms
    resolvers coredns
      nameserver dns1 10.100.0.10:53
      resolve_retries       3
      timeout resolve       1s
      timeout retry         1s
      hold valid            10s
    frontend http-in
      bind *:80
      default_backend kube
    backend kube
      option httpchk
      http-response add-header X-Backend-Server %s
      http-check send meth GET uri /readyz

      acl is_option method OPTIONS
      http-request set-method GET if is_option
      http-request set-path /readyz if is_option

      http-response set-header Access-Control-Allow-Origin "https://kube.pewty.fr"
      http-response set-header Access-Control-Allow-Headers "*"
      http-response set-header Access-Control-Allow-Methods "GET, OPTIONS, POST, PUT, PATCH, DELETE"

      server kube kubernetes.default.svc.cluster.local.:443 check ssl verify none resolvers coredns resolve-prefer ipv4
